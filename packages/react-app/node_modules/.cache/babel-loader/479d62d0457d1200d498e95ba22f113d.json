{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\Rahul\\\\Desktop\\\\NFTBulls\\\\NFTBulls-frontEnd\\\\packages\\\\react-app\\\\src\\\\views\\\\lenderView.jsx\",\n    _s = $RefreshSig$();\n\nimport { utils } from \"ethers\";\nimport { Select } from \"antd\";\nimport React, { useState } from \"react\";\nimport { Address, AddressInput } from \"../components\";\nimport { useTokenList } from \"eth-hooks/dapps/dex\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst {\n  Option\n} = Select;\nexport default function Lender({\n  yourLocalBalance,\n  mainnetProvider,\n  price,\n  address,\n  nftName,\n  nftAddress\n}) {\n  _s();\n\n  const [selectedToken, setSelectedToken] = useState(\"Pick a token!\");\n  const listOfTokens = useTokenList(\"https://raw.githubusercontent.com/SetProtocol/uniswap-tokenlist/main/set.tokenlist.json\");\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: /*#__PURE__*/_jsxDEV(\"div\", {\n      style: {\n        border: \"1px solid #cccccc\",\n        padding: 16,\n        width: \"80%\",\n        margin: \"auto\",\n        marginTop: 64\n      },\n      children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n        style: {\n          fontSize: \"relative\",\n          color: \"green\"\n        },\n        children: [nftName, \" \", /*#__PURE__*/_jsxDEV(\"span\", {\n          style: {\n            color: \"whitesmoke\"\n          },\n          children: \"NFT Loaning Terms\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 26,\n          columnNumber: 74\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 26,\n        columnNumber: 13\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        style: {\n          margin: 8\n        },\n        children: [/*#__PURE__*/_jsxDEV(\"div\", {\n          children: [/*#__PURE__*/_jsxDEV(\"b\", {\n            children: \"useTokenList()\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 30,\n            columnNumber: 15\n          }, this), \" can get you an array of tokens from\", \" \", /*#__PURE__*/_jsxDEV(\"a\", {\n            href: \"https://tokenlists.org\",\n            target: \"_blank\",\n            rel: \"noopener noreferrer\",\n            children: \"tokenlists.org!\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 31,\n            columnNumber: 15\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 29,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(Select, {\n          showSearch: true,\n          value: selectedToken,\n          onChange: value => {\n            console.log(`selected ${value}`);\n            setSelectedToken(value);\n          },\n          filterOption: (input, option) => option.children.toLowerCase().indexOf(input.toLowerCase()) >= 0,\n          optionFilterProp: \"children\",\n          children: listOfTokens.map(token => /*#__PURE__*/_jsxDEV(Option, {\n            value: token.symbol,\n            children: token.symbol\n          }, token.symbol, false, {\n            fileName: _jsxFileName,\n            lineNumber: 46,\n            columnNumber: 17\n          }, this))\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 35,\n          columnNumber: 13\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 28,\n        columnNumber: 13\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 25,\n      columnNumber: 9\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 24,\n    columnNumber: 7\n  }, this);\n}\n\n_s(Lender, \"GN151tdJfFLWvaMmgtznLRWGE3w=\", false, function () {\n  return [useTokenList];\n});\n\n_c = Lender;\n\nvar _c;\n\n$RefreshReg$(_c, \"Lender\");","map":{"version":3,"sources":["C:/Users/Rahul/Desktop/NFTBulls/NFTBulls-frontEnd/packages/react-app/src/views/lenderView.jsx"],"names":["utils","Select","React","useState","Address","AddressInput","useTokenList","Option","Lender","yourLocalBalance","mainnetProvider","price","address","nftName","nftAddress","selectedToken","setSelectedToken","listOfTokens","border","padding","width","margin","marginTop","fontSize","color","value","console","log","input","option","children","toLowerCase","indexOf","map","token","symbol"],"mappings":";;;AAAA,SAASA,KAAT,QAAsB,QAAtB;AACA,SAASC,MAAT,QAAuB,MAAvB;AACA,OAAOC,KAAP,IAAgBC,QAAhB,QAAgC,OAAhC;AACA,SAASC,OAAT,EAAkBC,YAAlB,QAAsC,eAAtC;AACA,SAASC,YAAT,QAA6B,qBAA7B;;AAEA,MAAM;AAAEC,EAAAA;AAAF,IAAaN,MAAnB;AAEA,eAAe,SAASO,MAAT,CAAgB;AAC3BC,EAAAA,gBAD2B;AAE3BC,EAAAA,eAF2B;AAG3BC,EAAAA,KAH2B;AAI3BC,EAAAA,OAJ2B;AAK3BC,EAAAA,OAL2B;AAM3BC,EAAAA;AAN2B,CAAhB,EAOZ;AAAA;;AAED,QAAM,CAACC,aAAD,EAAgBC,gBAAhB,IAAoCb,QAAQ,CAAC,eAAD,CAAlD;AACA,QAAMc,YAAY,GAAGX,YAAY,CAC/B,yFAD+B,CAAjC;AAIA,sBACI;AAAA,2BACE;AAAK,MAAA,KAAK,EAAE;AAAEY,QAAAA,MAAM,EAAE,mBAAV;AAA+BC,QAAAA,OAAO,EAAE,EAAxC;AAA4CC,QAAAA,KAAK,EAAE,KAAnD;AAA0DC,QAAAA,MAAM,EAAE,MAAlE;AAA0EC,QAAAA,SAAS,EAAE;AAArF,OAAZ;AAAA,8BACI;AAAI,QAAA,KAAK,EAAE;AAACC,UAAAA,QAAQ,EAAE,UAAX;AAAuBC,UAAAA,KAAK,EAAE;AAA9B,SAAX;AAAA,mBAAoDX,OAApD,oBAA6D;AAAM,UAAA,KAAK,EAAE;AAACW,YAAAA,KAAK,EAAE;AAAR,WAAb;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,gBAA7D;AAAA;AAAA;AAAA;AAAA;AAAA,cADJ,eAGI;AAAK,QAAA,KAAK,EAAE;AAAEH,UAAAA,MAAM,EAAE;AAAV,SAAZ;AAAA,gCACA;AAAA,kCACE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBADF,0CAC4D,GAD5D,eAEE;AAAG,YAAA,IAAI,EAAC,wBAAR;AAAiC,YAAA,MAAM,EAAC,QAAxC;AAAiD,YAAA,GAAG,EAAC,qBAArD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBAFF;AAAA;AAAA;AAAA;AAAA;AAAA,gBADA,eAOA,QAAC,MAAD;AACE,UAAA,UAAU,MADZ;AAEE,UAAA,KAAK,EAAEN,aAFT;AAGE,UAAA,QAAQ,EAAEU,KAAK,IAAI;AACjBC,YAAAA,OAAO,CAACC,GAAR,CAAa,YAAWF,KAAM,EAA9B;AACAT,YAAAA,gBAAgB,CAACS,KAAD,CAAhB;AACD,WANH;AAOE,UAAA,YAAY,EAAE,CAACG,KAAD,EAAQC,MAAR,KAAmBA,MAAM,CAACC,QAAP,CAAgBC,WAAhB,GAA8BC,OAA9B,CAAsCJ,KAAK,CAACG,WAAN,EAAtC,KAA8D,CAPjG;AAQE,UAAA,gBAAgB,EAAC,UARnB;AAAA,oBAUGd,YAAY,CAACgB,GAAb,CAAiBC,KAAK,iBACrB,QAAC,MAAD;AAA2B,YAAA,KAAK,EAAEA,KAAK,CAACC,MAAxC;AAAA,sBACGD,KAAK,CAACC;AADT,aAAaD,KAAK,CAACC,MAAnB;AAAA;AAAA;AAAA;AAAA,kBADD;AAVH;AAAA;AAAA;AAAA;AAAA,gBAPA;AAAA;AAAA;AAAA;AAAA;AAAA,cAHJ;AAAA;AAAA;AAAA;AAAA;AAAA;AADF;AAAA;AAAA;AAAA;AAAA,UADJ;AAgCD;;GA9CuB3B,M;UAUDF,Y;;;KAVCE,M","sourcesContent":["import { utils } from \"ethers\";\r\nimport { Select } from \"antd\";\r\nimport React, { useState } from \"react\";\r\nimport { Address, AddressInput } from \"../components\";\r\nimport { useTokenList } from \"eth-hooks/dapps/dex\";\r\n\r\nconst { Option } = Select;\r\n\r\nexport default function Lender({ \r\n    yourLocalBalance, \r\n    mainnetProvider, \r\n    price, \r\n    address,\r\n    nftName,\r\n    nftAddress \r\n}) {\r\n\r\n  const [selectedToken, setSelectedToken] = useState(\"Pick a token!\");\r\n  const listOfTokens = useTokenList(\r\n    \"https://raw.githubusercontent.com/SetProtocol/uniswap-tokenlist/main/set.tokenlist.json\",\r\n  );\r\n\r\n  return (\r\n      <div>\r\n        <div style={{ border: \"1px solid #cccccc\", padding: 16, width: \"80%\", margin: \"auto\", marginTop: 64 }}>\r\n            <h2 style={{fontSize: \"relative\", color: \"green\"}}>{nftName} <span style={{color: \"whitesmoke\"}}>NFT Loaning Terms</span></h2> \r\n\r\n            <div style={{ margin: 8 }}>\r\n            <div>\r\n              <b>useTokenList()</b> can get you an array of tokens from{\" \"}\r\n              <a href=\"https://tokenlists.org\" target=\"_blank\" rel=\"noopener noreferrer\">\r\n                tokenlists.org!\r\n              </a>\r\n            </div>\r\n            <Select\r\n              showSearch\r\n              value={selectedToken}\r\n              onChange={value => {\r\n                console.log(`selected ${value}`);\r\n                setSelectedToken(value);\r\n              }}\r\n              filterOption={(input, option) => option.children.toLowerCase().indexOf(input.toLowerCase()) >= 0}\r\n              optionFilterProp=\"children\"\r\n            >\r\n              {listOfTokens.map(token => (\r\n                <Option key={token.symbol} value={token.symbol}>\r\n                  {token.symbol}\r\n                </Option>\r\n              ))}\r\n            </Select>\r\n          </div>\r\n        </div>\r\n      </div>\r\n  );\r\n}"]},"metadata":{},"sourceType":"module"}